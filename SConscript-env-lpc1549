# Modifies the environment to build mbed firmware for the LPC1549 using GCC-ARM
Import('env')

env.ConfigureMbedTarget('LPC1549', File('mbed/targets/targets.json').srcnode())

# Build the mbed library as a static library
mbed_paths = env.GetMbedSourceDirectories('mbed')
env.Append(CPPPATH=[x.srcnode() for x in mbed_paths])  # this allows duplicate=0
env['MBED_LINKSCRIPT'] = env.GetMbedLinkscript(mbed_paths)
env.Append(CPPDEFINES=[
    'MBED_CONF_PLATFORM_STDIO_BAUD_RATE=9600',
    'MBED_CONF_PLATFORM_DEFAULT_SERIAL_BAUD_RATE=9600',
    'MBED_CONF_PLATFORM_STDIO_FLUSH_AT_EXIT==1',
    'MBED_CONF_PLATFORM_STDIO_CONVERT_NEWLINES=0'
])
           
env_mbed = env.Clone()
env_mbed.Append(CCFLAGS='-w')  # don't care about errors in dependencies
mbed_lib = env_mbed.StaticLibrary('mbed', env.GetMbedSources(mbed_paths))

env.Append(LINKFLAGS=[
  '-Wl,--whole-archive',  # used to compile mbed HAL, which uses funky weak symbols
  mbed_lib,
  '-Wl,--no-whole-archive',
])

env.Prepend(LIBS=mbed_lib)
